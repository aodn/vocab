
TODO, 
	PAR remove
	add platforms - find example
	refacctor to get rid of top concept
	refactor to use more generic nesting
	refactor so terms don't specify their concept scheme - (check this / maybe)

	go through other notes - for other things. 

	impose some ordering. - perhaps in the query_rdf_objects() method 

	create a view over classifications etc. maybe maybe not until after refactor.

	user view - change name of user views so it's easier to distinguish


	issue with empty inScheme references 

----

	- very not sure about the inscheme thing. it should be derived from the top
	of the narrower.  
	- i think there must be urls repeated in the tables.

----
TODO

- Need to tighten up skos1 so it's only outputting stuff for parameter
	should just be the outer loops that needs more constraint. 

	- although the indirection is difficult. - we have to be able to trace it 
	back. this might be hard.

- need a view to tell us the nesting level of a concept.

- need to verify that we've got 2nd and 3rd tier being outputted correctly

---

Lets have a stab at the other skos. file.



<!-- doing it like this makes it amenable to using sparql instead -->

<!-- should change the encoding to charset=ISO-8859-1  -->
<!-- should hard code rather than pass literals as parameter -->

<!-- an element  dc publisher thats getting repeated twice probably because of the rp person outside join -->

<!-- perhaps swap the ordering to read more cleanly - same as sparql 
  eg. 

    'select object from _rdf where subject = $1 and predicate = $$dc:title$$ ',
  s p o
-->



<?xml version="1.0" encoding="windows-1252"?>
<rdf:RDF 
xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
xmlns:skos="http://www.w3.org/2004/02/skos/core#" 
xmlns:dc="http://purl.org/dc/elements/1.1/" 
xmlns:dcterms="http://purl.org/dc/terms/" 
xmlns:foaf="http://xmlns.com/foaf/0.1/">


-- I think we need further constraints ...
-- to restrict things to the parameter scheme .  how do we code this extra xml ? 
   
-- I think we just need to refine the outer query a little more ...

-- there's actually quite a lot of opportunities to factor this stuff
-- because it's only the controlling variable that changes 


-- EXTREMELY IMPORTANT - we can use the same template. to generate.  

