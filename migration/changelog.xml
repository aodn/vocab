<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">


<!-- do the renaming first so any subsequent views we create will be ok --> 
	
	<!-- rename tables --> 
	<changeSet author="julian" id="000001">
		<renameTable newTableName="affiliation_type" oldTableName="affiliation_type_table" />											
		<renameTable newTableName="amendment" oldTableName="amendment_table" />															<!-- done -->
		<renameTable newTableName="association_type" oldTableName="association_type_table" />											<!-- done - one string but ok -->
		<renameTable newTableName="classification_scheme_association" oldTableName="classification_scheme_association_table" />
		<renameTable newTableName="classification_scheme_category" oldTableName="classification_scheme_category_table" />
		<renameTable newTableName="classification_scheme" oldTableName="classification_scheme_table" />
		<renameTable newTableName="external_associated_terms" oldTableName="external_associated_terms_table" />							<!-- good -->
		<renameTable newTableName="internal_associated_terms" oldTableName="internal_associated_terms_table" />
		<renameTable newTableName="object_term" oldTableName="object_term_table" />
		<renameTable newTableName="organisation_name" oldTableName="organisation_name_table" />
		<renameTable newTableName="organisation_synonym" oldTableName="organisation_synonym_table" />
		<renameTable newTableName="person_organisational_affiliation" oldTableName="person_organisational_affiliation_table" />
		<renameTable newTableName="person" oldTableName="person_table" />
		<renameTable newTableName="reference_source" oldTableName="reference_source_table" />											<!-- good -->
		<renameTable newTableName="register_manager" oldTableName="register_manager_table" />
		<renameTable newTableName="register_owner" oldTableName="register_owner_table" />
		<renameTable newTableName="subject_term" oldTableName="subject_term_table" />
		<renameTable newTableName="term_category_classification" oldTableName="term_category_classification_table" />
		<renameTable newTableName="term_proposer" oldTableName="term_proposer_table" />
		<renameTable newTableName="vocabulary_register" oldTableName="vocabulary_register_table" />
		<renameTable newTableName="vocabulary_term" oldTableName="vocabulary_term_table" />
		<renameTable newTableName="vocabulary_type" oldTableName="vocabulary_type_table" />
	</changeSet>


	<!-- vocabulary_term - vocabulary_term_code rename to id - multiple primary keys not allowed. -->
	<changeSet author="julian" id="000002">
		<!-- At some point we want to change the vocabulary_term_code into an integer primary key 
			But we'll drop it for now - because too manu things depend on the uid.
		-->
		<!-- sql>  alter table vocabulary_term drop constraint vocabular_term_table_pkey  </sql-->
		<!-- addPrimaryKey columnNames="id" tableName="vocabulary_term" /-->
		 <!-- dropColumn columnName="vocabulary_term_code"  tableName="vocabulary_term"/-->


		<!-- needs a not -null constraint as well -->
		<renameColumn newColumnName="id" oldColumnName="vocabulary_term_code" tableName="vocabulary_term"/>
		<addUniqueConstraint columnNames="id" tableName="vocabulary_term" />
		<addNotNullConstraint columnName="id" tableName="vocabulary_term"/>
	</changeSet>


	<changeSet author="julian" id="000003">
		  <renameColumn newColumnName="name" oldColumnName="vocabulary_term_name" tableName="vocabulary_term"/>
		  <renameColumn newColumnName="uid" oldColumnName="vocabulary_term_uid" tableName="vocabulary_term"/>
		  <!-- to drop renameColumn newColumnName="vocabulary_instance_of" oldColumnName="vocabulary_instance_of" tableName="vocabulary_term"/ -->
		  <renameColumn newColumnName="short_name" oldColumnName="vocabulary_term_short_name" tableName="vocabulary_term"/>
		  <renameColumn newColumnName="ancillary_information" oldColumnName="vocabulary_term_ancillary_information" tableName="vocabulary_term"/>
		  <renameColumn newColumnName="definition" oldColumnName="vocabulary_term_definition" tableName="vocabulary_term"/>
	</changeSet>

	<changeSet author="julian" id="000004">
		  <dropColumn columnName="internal_relationship" tableName="vocabulary_term"/>
		  <dropColumn columnName="external_relationship" tableName="vocabulary_term"/>
		  <dropColumn columnName="vocabulary_instance_of" tableName="vocabulary_term"/>
	</changeSet>


	<!-- external_associated_terms 
		reference vocabulary_term.id 
		select v.id, v.name, a.vocabulary_term_id, a.vocabulary_term_name from vocabulary_term v join external_associated_terms a on v.name = a.vocabulary_term_name ;
	-->
	<changeSet author="julian" id="000005">
		<addColumn tableName="external_associated_terms">
			<column name="vocabulary_term_id" type="integer"/>  <!-- should be non- nullable  - needs to be a foreign key -->
		</addColumn>
		<sql>
			update external_associated_terms a set vocabulary_term_id = v.id from vocabulary_term v where v.name = a.vocabulary_term_name
		</sql>
	    <addForeignKeyConstraint 
            constraintName="external_associated_terms_vocabulary_term_id_fkey"
			baseColumnNames="vocabulary_term_id"
            baseTableName="external_associated_terms"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"/>
		 <addNotNullConstraint columnName="vocabulary_term_id" tableName="external_associated_terms"/>
		<dropColumn columnName="vocabulary_term_name" tableName="external_associated_terms"/>
	</changeSet>



	<!-- amendment
		select vocabulary_term_name, vocabulary_term_code, v.name, v.id  from amendment a join vocabulary_term v on a.vocabulary_term_name = v.name;
	-->	
	<changeSet author="julian" id="000006">
		<addColumn tableName="amendment">
			<column name="vocabulary_term_id" type="integer"/>  <!-- should be non- nullable  - needs to be a foreign key -->
		</addColumn>
		<sql>
			update amendment a set vocabulary_term_id = v.id from vocabulary_term v where v.name = a.vocabulary_term_name
		</sql>
	    <addForeignKeyConstraint 
            constraintName="amendment_vocabulary_term_id_fkey"
			baseColumnNames="vocabulary_term_id"
            baseTableName="amendment"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"/>
		 <addNotNullConstraint columnName="vocabulary_term_id" tableName="amendment"/>
		<!-- two non-normalized columns --> 
		<dropColumn columnName="vocabulary_term_name" tableName="amendment"/>
		<dropColumn columnName="vocabulary_term_code" tableName="amendment"/>
	</changeSet>

	<!-- amendment more tidying 
		register_name   still needs to link on an integer id.
	--> 
	<changeSet author="julian" id="000007">
		<addNotNullConstraint columnName="person_id" tableName="amendment"/>
		<addNotNullConstraint columnName="organisation_name_id" tableName="amendment"/>
		<renameColumn newColumnName="id" oldColumnName="amendment_id" tableName="amendment"/>
		<renameColumn newColumnName="type" oldColumnName="amendment_type" tableName="amendment"/>
		<renameColumn newColumnName="request_date" oldColumnName="amendment_request_date" tableName="amendment"/>
		<renameColumn newColumnName="approval_date" oldColumnName="amendment_approval_date" tableName="amendment"/>
	</changeSet>



	<!-- association_type 
		name is primary key. - ok.
		not unique constraint is not needed since it's already a primary key --> 
	<changeSet author="julian" id="000008">
		<renameColumn newColumnName="name" oldColumnName="association_type_name" tableName="association_type"/>
		<renameColumn newColumnName="description" oldColumnName="association_type_name_description" tableName="association_type"/>
		<!-- addUniqueConstraint columnNames="name" tableName="association_type" /-->
	</changeSet>

	<!-- reference_source -->
	<changeSet author="julian" id="000009">
		<renameColumn newColumnName="id" oldColumnName="reference_id" tableName="reference_source"/>
	</changeSet>






	<!--
            constraintName="fk_address_person"
            deferrable="true"
            initiallyDeferred="true"
            onDelete="CASCADE"
            onUpdate="RESTRICT"
	-->

	

	<!-- changeSet author="julian" id="000006">
    <update tableName="external_associated_terms">
        <column name="vocabulary_term_id"  value="" />
        <where>A String</where>
    </update>
	</changeSet-->







</databaseChangeLog>
