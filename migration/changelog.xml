<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">



	<!-- rename tables -->
	<changeSet author="julian" id="000001">
		<renameTable newTableName="affiliation_type" oldTableName="affiliation_type_table" />											<!-- done -->
		<renameTable newTableName="amendment" oldTableName="amendment_table" />															<!-- done -->
		<renameTable newTableName="association_type" oldTableName="association_type_table" />											<!-- done - one string but ok -->
		<renameTable newTableName="classification_scheme_association" oldTableName="classification_scheme_association_table" />
		<renameTable newTableName="classification_scheme_category" oldTableName="classification_scheme_category_table" />
		<renameTable newTableName="classification_scheme" oldTableName="classification_scheme_table" />
		<renameTable newTableName="external_associated_terms" oldTableName="external_associated_terms_table" />							<!-- good -->
		<renameTable newTableName="internal_associated_terms" oldTableName="internal_associated_terms_table" />
		<renameTable newTableName="object_term" oldTableName="object_term_table" />
		<renameTable newTableName="organisation" oldTableName="organisation_name_table" />												<!-- good -->
		<renameTable newTableName="organisation_synonym" oldTableName="organisation_synonym_table" />									<!-- good -->
		<renameTable newTableName="person_organisational_affiliation" oldTableName="person_organisational_affiliation_table" />			<!-- ok but has 3 field composite key?? -->
		<renameTable newTableName="person" oldTableName="person_table" />																<!-- good -->
		<renameTable newTableName="reference_source" oldTableName="reference_source_table" />											<!-- good -->
		<renameTable newTableName="register_manager" oldTableName="register_manager_table" />											<!-- removed -->
		<renameTable newTableName="register_owner" oldTableName="register_owner_table" />												<!-- removed -->
		<renameTable newTableName="subject_term" oldTableName="subject_term_table" />
		<renameTable newTableName="term_category_classification" oldTableName="term_category_classification_table" />
		<renameTable newTableName="term_proposer" oldTableName="term_proposer_table" />													<!-- removed -->
		<renameTable newTableName="vocabulary_register" oldTableName="vocabulary_register_table" />
		<renameTable newTableName="vocabulary_term" oldTableName="vocabulary_term_table" />												<!-- ok -->
		<renameTable newTableName="vocabulary_type" oldTableName="vocabulary_type_table" />												<!-- good -->
	</changeSet>



	<!-- organisation name -->
	<changeSet author="julian" id="000002">
		<renameColumn newColumnName="id" oldColumnName="organisation_name_id" tableName="organisation"/>
		<renameColumn newColumnName="name" oldColumnName="organisation_name" tableName="organisation"/>
		<renameColumn newColumnName="description" oldColumnName="organisation_name_description" tableName="organisation"/>
		<renameColumn newColumnName="acronym" oldColumnName="organisation_acronym" tableName="organisation"/>
		<renameColumn newColumnName="address" oldColumnName="organisation_address" tableName="organisation"/>
		<renameColumn newColumnName="status" oldColumnName="organisation_name_status" tableName="organisation"/>
		<renameColumn newColumnName="notes" oldColumnName="organisation_notes" tableName="organisation"/>
		<!-- normalize -->
		<dropColumn columnName="organisation_synonym" tableName="organisation"/>
	</changeSet>


	<!-- person -->
	<changeSet author="julian" id="000003">
		<renameColumn newColumnName="id" oldColumnName="person_id" tableName="person"/>
		<renameColumn newColumnName="name" oldColumnName="person_name" tableName="person"/>
		<renameColumn newColumnName="salutation" oldColumnName="person_salutation" tableName="person"/>
		<renameColumn newColumnName="email" oldColumnName="contact_email" tableName="person"/>
	</changeSet>


	<!-- new table responsible party to replace register_owner, register_manager, term_proposer etc
		should probably also incorporate affiliation_type since it's a one-to-one mapping
	-->
	<changeSet author="julian" id="000004">
		<createTable tableName="responsible_party" >
			<column name="id" type="serial">
				 <constraints primaryKey="true"/>
			</column>
			<column name="person_id" type="integer"/>
			<column name="organisation_id" type="integer"/>
		</createTable>
		<addUniqueConstraint columnNames="person_id,organisation_id" tableName="responsible_party" />
		<sql>
			-- this is very flexible, for adding other entries - and affiliation_type if we need
			insert into responsible_party (person_id, organisation_id)
			select p.id, o.id
			from person p
			cross join organisation o
			where ( o.acronym ~ 'eMII' and p.name ~ 'Seb' )
			or ( o.acronym ~ 'IMOS' and p.name ~ 'Seb' )
		</sql>
	</changeSet>


	<!-- vocabulary_register -->
	<changeSet author="julian" id="000005">
		<!-- integer primary key -->
		<sql>
			alter table vocabulary_register drop constraint vocabulary_register_table_pkey cascade
		</sql>
		<addColumn tableName="vocabulary_register">
			<column name="id" type="serial"/>
		</addColumn>
		<addPrimaryKey columnNames="id" tableName="vocabulary_register" />

		<!-- rename -->
		<renameColumn newColumnName="uid" oldColumnName="register_uid" tableName="vocabulary_register"/>
		<renameColumn newColumnName="name" oldColumnName="register_name" tableName="vocabulary_register"/>
		<renameColumn newColumnName="content_summary" oldColumnName="register_content_summary" tableName="vocabulary_register"/>
		<renameColumn newColumnName="language_name" oldColumnName="register_language_name" tableName="vocabulary_register"/>
		<renameColumn newColumnName="language_code" oldColumnName="register_language_code" tableName="vocabulary_register"/>
		<renameColumn newColumnName="language_country" oldColumnName="register_language_country" tableName="vocabulary_register"/>
		<renameColumn newColumnName="language_encoding" oldColumnName="register_language_encoding" tableName="vocabulary_register"/>
		<renameColumn newColumnName="version" oldColumnName="register_version" tableName="vocabulary_register"/>
		<renameColumn newColumnName="date" oldColumnName="register_date" tableName="vocabulary_register"/>

		<!-- constraints -->
		<addUniqueConstraint columnNames="name" tableName="vocabulary_register" />
		<addNotNullConstraint columnName="name" tableName="vocabulary_register"/>

		<addUniqueConstraint columnNames="uid" tableName="vocabulary_register" />
		<addNotNullConstraint columnName="uid" tableName="vocabulary_register"/>


		<!-- use responsible_party and drop register_manager table -->
		<addColumn tableName="vocabulary_register">
			<column name="manager_responsible_party_id" type="integer"/>
		</addColumn>
		<sql>
			-- eg. 1
			update vocabulary_register vr set manager_responsible_party_id = rp.id
			from responsible_party rp, register_manager rm
			where vr.name = rm.register_name
			and rm.person_id = rp.person_id
			and rm.organisation_name_id = rp.organisation_id
		</sql>
	    <addForeignKeyConstraint
            constraintName="vocabulary_register_manager_responsible_party_fkey"
			baseColumnNames="manager_responsible_party_id"
            baseTableName="vocabulary_register"
            referencedColumnNames="id"
            referencedTableName="responsible_party"
		/>
		<dropTable tableName="register_manager"/>


		<!-- use responsible_party and drop register_owner table -->
		<addColumn tableName="vocabulary_register">
			<column name="owner_responsible_party_id" type="integer"/>
		</addColumn>
		<sql>
			-- eg. 1
			update vocabulary_register vr set owner_responsible_party_id = rp.id
			from responsible_party rp, register_owner ro
			where vr.name = ro.register_name
			and ro.person_id = rp.person_id
			and ro.organisation_name_id = rp.organisation_id
		</sql>
	    <addForeignKeyConstraint
            constraintName="vocabulary_register_owner_responsible_party_fkey"
			baseColumnNames="owner_responsible_party_id"
            baseTableName="vocabulary_register"
            referencedColumnNames="id"
            referencedTableName="responsible_party"
		/>
		<dropTable tableName="register_owner"/>

	</changeSet>



	<!-- vocabulary_term -->
	<changeSet author="julian" id="000006">
		<!-- remove old primary key, add new integer one -->
		<sql>
			alter table vocabulary_term drop constraint vocabular_term_table_pkey cascade;
		</sql>

		<!-- need to change type to serial
			perhaps should be copying values ...
		-->

		<renameColumn newColumnName="id" oldColumnName="vocabulary_term_code" tableName="vocabulary_term"/>
		<addPrimaryKey columnNames="id" tableName="vocabulary_term" />

		<!-- unique constraint on name -->
		<renameColumn newColumnName="name" oldColumnName="vocabulary_term_name" tableName="vocabulary_term"/>
		<addUniqueConstraint columnNames="name" tableName="vocabulary_term" />
		<addNotNullConstraint columnName="name" tableName="vocabulary_term"/>

		<!-- unique constraint on uid -->
		<renameColumn newColumnName="uid" oldColumnName="vocabulary_term_uid" tableName="vocabulary_term"/>
		<addUniqueConstraint columnNames="uid" tableName="vocabulary_term" />
		<addNotNullConstraint columnName="uid" tableName="vocabulary_term"/>

		<!-- clean up column naming -->
		<renameColumn newColumnName="short_name" oldColumnName="vocabulary_term_short_name" tableName="vocabulary_term"/>
		<renameColumn newColumnName="ancillary_information" oldColumnName="vocabulary_term_ancillary_information" tableName="vocabulary_term"/>
		<renameColumn newColumnName="definition" oldColumnName="vocabulary_term_definition" tableName="vocabulary_term"/>

		<!-- normalize -->
		<dropColumn columnName="internal_relationship" tableName="vocabulary_term"/>
		<dropColumn columnName="external_relationship" tableName="vocabulary_term"/>
		<dropColumn columnName="vocabulary_instance_of" tableName="vocabulary_term"/>

		<!-- term_proposer responsible party and drop term_proposer table and existing ref -->
		<dropColumn columnName="term_proposer_id" tableName="vocabulary_term"/>
		<addColumn tableName="vocabulary_term">
			<column name="proposer_responsible_party_id" type="integer"/>
		</addColumn>
		<sql>
			update vocabulary_term set proposer_responsible_party_id = 1
		</sql>
	    <addForeignKeyConstraint
            constraintName="vocabulary_term_proposer_responsible_party_fkey"
			baseColumnNames="proposer_responsible_party_id"
            baseTableName="vocabulary_term"
            referencedColumnNames="id"
            referencedTableName="responsible_party"
		/>
		<dropTable tableName="term_proposer"/>


		<!-- vocabulary_term to use vocabulary_register(id) -->
		<addColumn tableName="vocabulary_term">
			<column name="vocabulary_register_id" type="integer"/>
		</addColumn>
		<sql>
			update vocabulary_term vt set vocabulary_register_id = vr.id
			from vocabulary_register vr
			where vr.name = vt.register_name
		</sql>
	    <addForeignKeyConstraint
            constraintName="vocabulary_term_vocabulary_register_fkey"
			baseColumnNames="vocabulary_register_id"
            baseTableName="vocabulary_term"
            referencedColumnNames="id"
            referencedTableName="vocabulary_register"
		/>
		<dropColumn columnName="register_name" tableName="vocabulary_term"/>


		<!-- change added_by to point at person table -->
		<addColumn tableName="vocabulary_term">
			<column name="added_by_person_id" type="integer"/>
		</addColumn>
		<sql>
			update vocabulary_term vt set added_by_person_id = p.id
			from person p
			where lower( p.name) = lower( regexp_replace(vt.added_by, '(.*) (.*).*', '\2, \1'))
		</sql>
	    <addForeignKeyConstraint
            constraintName="vocabulary_term_added_by_person_fkey"
			baseColumnNames="added_by_person_id"
            baseTableName="vocabulary_term"
            referencedColumnNames="id"
            referencedTableName="person"
		/>
		<dropColumn columnName="added_by" tableName="vocabulary_term"/>
	</changeSet>




	<!-- external_associated_terms -->
	<changeSet author="julian" id="000007">

		<!-- reference vocabulary_term(id) -->
		<addColumn tableName="external_associated_terms">
			<column name="vocabulary_term_id" type="integer"/>
		</addColumn>
		<sql>
			update external_associated_terms a set vocabulary_term_id = v.id
			from vocabulary_term v
			where v.name = a.vocabulary_term_name
		</sql>
	    <addForeignKeyConstraint
            constraintName="external_associated_terms_vocabulary_term_id_fkey"
			baseColumnNames="vocabulary_term_id"
            baseTableName="external_associated_terms"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"
		/>
		<dropColumn columnName="vocabulary_term_name" tableName="external_associated_terms"/>

		<renameColumn newColumnName="uid" oldColumnName="external_term_uid" tableName="external_associated_terms"/>

		<!-- enforce tuple uniqueness -->
		<addUniqueConstraint columnNames="vocabulary_term_id,uid,association_type_name" tableName="external_associated_terms" />
		<addNotNullConstraint columnName="uid" tableName="external_associated_terms"/>
		<addNotNullConstraint columnName="association_type_name" tableName="external_associated_terms"/>

		<!-- get rid of badly loaded data whereby external terms refer to themselves via the vocabulary_table -->
		<sql>
			delete from external_associated_terms eat
			using vocabulary_term vt
			where eat.vocabulary_term_id = vt.id
			and eat.uid = vt.uid;
		</sql>

		<!-- note the uid is correct - and represents a real external resource
			that is not repeated anywhere else -->

	</changeSet>






	<!-- amendment -->
	<changeSet author="julian" id="000008">
		<addColumn tableName="amendment">
			<column name="vocabulary_term_id" type="integer"/>
		</addColumn>
		<sql>
			update amendment a set vocabulary_term_id = v.id
			from vocabulary_term v
			where v.name = a.vocabulary_term_name
		</sql>
	    <addForeignKeyConstraint
            constraintName="amendment_vocabulary_term_id_fkey"
			baseColumnNames="vocabulary_term_id"
            baseTableName="amendment"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"/>
		 <addNotNullConstraint columnName="vocabulary_term_id" tableName="amendment"/>

		<!-- normalize -->
		<dropColumn columnName="vocabulary_term_name" tableName="amendment"/>
		<dropColumn columnName="vocabulary_term_code" tableName="amendment"/>


		<!--**IMPORTANT id is already primary key, but not serial -->
		<renameColumn newColumnName="id" oldColumnName="amendment_id" tableName="amendment"/>


		<renameColumn newColumnName="type" oldColumnName="amendment_type" tableName="amendment"/>
		<renameColumn newColumnName="request_date" oldColumnName="amendment_request_date" tableName="amendment"/>
		<renameColumn newColumnName="approval_date" oldColumnName="amendment_approval_date" tableName="amendment"/>

		<!-- use vocabulary_register primary key id -->
		<addColumn tableName="amendment">
			<column name="vocabulary_register_id" type="integer"/>
		</addColumn>
		<sql>
			update amendment a set vocabulary_register_id = vr.id
			from vocabulary_register vr
			where vr.name = a.register_name
		</sql>
	    <addForeignKeyConstraint
            constraintName="amendment_vocabulary_register_id_fkey"
			baseColumnNames="vocabulary_register_id"
            baseTableName="amendment"
            referencedColumnNames="id"
            referencedTableName="vocabulary_register"
		/>
		<dropColumn columnName="register_name" tableName="amendment"/>




		<!-- amendment to use responsible party, and drop person,organisation fields -->
		<addColumn tableName="amendment">
			<column name="responsible_party_id" type="integer"/>
		</addColumn>
		<sql>
			-- eg. 1
			update amendment a set responsible_party_id = rp.id
			from responsible_party rp
			where a.person_id = rp.person_id
			and a.organisation_name_id = rp.organisation_id
		</sql>
	    <addForeignKeyConstraint
            constraintName="amendment_responsible_party_fkey"
			baseColumnNames="responsible_party_id"
            baseTableName="amendment"
            referencedColumnNames="id"
            referencedTableName="responsible_party"
		/>
		<dropColumn columnName="person_id" tableName="amendment"/>
		<dropColumn columnName="organisation_name_id" tableName="amendment"/>

	</changeSet>





	<!-- association_type -->
	<changeSet author="julian" id="000009">
		<renameColumn newColumnName="name" oldColumnName="association_type_name" tableName="association_type"/>
		<renameColumn newColumnName="description" oldColumnName="association_type_name_description" tableName="association_type"/>
	</changeSet>


	<!-- reference_source -->
	<changeSet author="julian" id="000010">
		<renameColumn newColumnName="id" oldColumnName="reference_id" tableName="reference_source"/>
		<renameColumn newColumnName="organisation_id" oldColumnName="organisation_name_id" tableName="reference_source"/>
	</changeSet>


	<!--
	vocab=> \d  organisation_synonym ;
         Table "contr_vocab_db.organisation_synonym"
         Column          |          Type          | Modifiers
			 organisation_synonym_id | integer                | not null
			 organisation_id    | integer                |
			 organisation       | character varying(110) |
	-->
	<!-- organisation synonym -->
	<changeSet author="julian" id="000011">
		<renameColumn newColumnName="id" oldColumnName="organisation_synonym_id" tableName="organisation_synonym"/>
		<renameColumn newColumnName="name" oldColumnName="organisation_name" tableName="organisation_synonym"/>
		<renameColumn newColumnName="organisation_id" oldColumnName="organisation_name_id" tableName="organisation_synonym"/>
	</changeSet>


	<!-- affiliation_type -->
	<changeSet author="julian" id="000012">
		<renameColumn newColumnName="name" oldColumnName="affiliation_type_name" tableName="affiliation_type"/>
		<renameColumn newColumnName="description" oldColumnName="affiliation_description" tableName="affiliation_type"/>
	</changeSet>



	<!-- person_organisational_affiliation  -->
	<changeSet author="julian" id="000014">
		<renameColumn newColumnName="organisation_id" oldColumnName="organisation_name_id" tableName="person_organisational_affiliation"/>
	</changeSet>


	<!-- vocabulary_type -->
	<changeSet author="julian" id="000015">
		<renameColumn newColumnName="name" oldColumnName="vocabulary_type_name" tableName="vocabulary_type"/>
		<renameColumn newColumnName="definition" oldColumnName="vocabulary_type_definition" tableName="vocabulary_type"/>
	</changeSet>


	<!--
		VERY IMPORTANT.>

		should not have stray uid's around the place ...
		should be linked from vocabulary term.

		uid - should be in the vocabulary_term, not here ...
	-->


	<!-- we need
		serial type for all primary keys .
	-->

	<!--
		person,organisation
			in term_proposer
			register_manager
			register_owner
		and person,organisation in amendment
		and person,organisation classfication_scheme_id

		are all tuples of person_id and organisation_id, that ought to be extracted.
		Also they are all repeating tuples

		Note. we can tighten this up futher by specifying relation between person and organisation
		similar to affiliation, but don't bother for now.
	-->
	<!--

		IMPORTANT
		-
			- person_organisational_affiliation, could/should have the affiliation put in
			the responsible party. but leave for the moment.
			- and lave as null if no affiliation. if only person or organisation is present.
			- but leave for now.
	-->


	<!-- classification_scheme to use responsible_party in place of person,organisation fields -->
	<changeSet author="julian" id="000016">
		<addColumn tableName="classification_scheme">
			<column name="responsible_party_id" type="integer"/>
		</addColumn>
		<sql>
			-- update classification_scheme set responsible_party_id = 2 -- Seb, Imos
			update classification_scheme cs set responsible_party_id = rp.id
			from responsible_party rp
			where cs.person_id = rp.person_id
			and cs.organisation_name_id = rp.organisation_id
		</sql>
	    <addForeignKeyConstraint
            constraintName="classification_scheme_responsible_party_fkey"
			baseColumnNames="responsible_party_id"
            baseTableName="classification_scheme"
            referencedColumnNames="id"
            referencedTableName="responsible_party"
		/>

		<dropColumn columnName="person_id" tableName="classification_scheme"/>
		<dropColumn columnName="organisation_name_id" tableName="classification_scheme"/>
	</changeSet>


	<!--
		IMPORTANT
		There are many nerc references in the internal_associations_table

		psql -h 127.0.0.1 -U contr_vocab_db -d vocab -c 'select name,uid from vocabulary_term where uid ~ $$nerc$$ '

		Ok - because uses external_associations_table  Why ?
	-->
	<!--
		think we want to change responsible_party to party
	-->

	<!-- internal_associated_terms  -->
	<changeSet author="julian" id="000017">

		<!-- avoid the indirection through the object_term and subject_term tables drop tables -->
		<addColumn tableName="internal_associated_terms">
			<column name="subject_vocabulary_term_id" type="integer"/>
		</addColumn>
		<addColumn tableName="internal_associated_terms">
			<column name="object_vocabulary_term_id" type="integer"/>
		</addColumn>
		<sql>
			-- note they exist as one-to-one mapping, but do it properly
			update internal_associated_terms ia
				set subject_vocabulary_term_id = vs.id,
				object_vocabulary_term_id = vo.id
				from subject_term s, object_term o, vocabulary_term vs, vocabulary_term vo
				where ia.subject_term_id = s.subject_term_id
				 and vs.name = s.vocabulary_term_name
				 and ia.object_term_id = o.object_term_id
				 and vo.name = o.vocabulary_term_name
		</sql>
	    <addForeignKeyConstraint
            constraintName="internal_associated_terms_subject_vocabulary_term_fkey"
			baseColumnNames="subject_vocabulary_term_id"
            baseTableName="internal_associated_terms"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"
		/>
	    <addForeignKeyConstraint
            constraintName="internal_associated_terms_object_vocabulary_term_fkey"
			baseColumnNames="object_vocabulary_term_id"
            baseTableName="internal_associated_terms"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"
		/>
		<dropColumn columnName="subject_term_id" tableName="internal_associated_terms"/>
		<dropColumn columnName="object_term_id" tableName="internal_associated_terms"/>
		<dropTable tableName="subject_term"/>
		<dropTable tableName="object_term"/>

		<!-- enforce tuple uniqueness - actually whole thing could be primary key -->
		<addUniqueConstraint columnNames="subject_vocabulary_term_id,object_vocabulary_term_id,association_type_name"
			tableName="internal_associated_terms" />

	</changeSet>


	<!-- internal_associated_terms, use vocabulary_term(id), and drop vocabulary_term_name -->
	<changeSet author="julian" id="000018">
		<addColumn tableName="term_category_classification">
			<column name="vocabulary_term_id" type="integer"/>
		</addColumn>
		<sql>
			update term_category_classification tcc set vocabulary_term_id = vt.id
			from vocabulary_term vt
			where tcc.vocabulary_term_name = vt.name
		</sql>
	    <addForeignKeyConstraint
            constraintName="term_category_classification_vocabulary_term_fkey"
			baseColumnNames="vocabulary_term_id"
            baseTableName="term_category_classification"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"
		/>
		<dropColumn columnName="vocabulary_term_name" tableName="term_category_classification"/>
	</changeSet>


	<!-- USER VIEWS 
			join tables up, in obvious way, to understand the data
	-->

	<!-- view of responsible party - should perhaps have association -->
	<changeSet author="julian" id="000019">
		<createView viewName="_responsible_party">
			select
				rp.id, 
				p.name as person_name, 
				o.acronym as organisation_acronym
			from responsible_party rp
			left join person p on p.id = rp.person_id
			left join organisation o on o.id = rp.organisation_id
		</createView>
	</changeSet>


	<!-- amendment -->
	<changeSet author="julian" id="000019-5">
		<createView viewName="_amendment">
			select
				trim(vt.uid) as uid,
				a.type,
				a.request_date,
				a.approval_date,
				vr.name as register_name,
				p.name as person_name,
				o.acronym as organisation_acronym
			from amendment a
			left join vocabulary_term vt on a.vocabulary_term_id = vt.id
			left join vocabulary_register vr on a.vocabulary_register_id = vr.id
			left join responsible_party rp on a.responsible_party_id = rp.id
			left join person p on p.id = rp.person_id
			left join organisation o on o.id = rp.organisation_id
		</createView>
	</changeSet>


	<!-- external associated terms -->
	<changeSet author="julian" id="000020">
		<createView viewName="_external_associated_terms">
			select
				trim(vt.uid) as uid,
				trim(vt.name) as name,
				trim(eat.uid) as external_uid,
				trim(association_type_name) as type
			from external_associated_terms eat
			left join vocabulary_term vt on eat.vocabulary_term_id = vt.id;
		</createView>
	</changeSet>



	<!-- internal associated terms -->
	<changeSet author="julian" id="000020-6">
		<createView viewName="_internal_associated_terms">
			select
				trim(association_type_name) as type,
				trim(svt.uid) as subject_uid,
				trim(svt.name) as subject_name,
				trim(ovt.uid) as object_uid,
				trim(ovt.name) as object_name
			from internal_associated_terms iat
			left join vocabulary_term svt on iat.subject_vocabulary_term_id = svt.id
			left join vocabulary_term ovt on iat.object_vocabulary_term_id = ovt.id
		</createView>
	</changeSet>

	<!-- we should put all these in a better order -->

	<changeSet author="julian" id="000020-7">
		<createView viewName="_reference_source">
			select 
				trim( vt.uid) as uid, 
				trim(vt.name) as name,
				rs.citation_string as citation_string, 
				rs.online_reference_resource as online_reference_resource, 
				o.acronym as organisation_acronym 
			from vocabulary_term vt 
			left join reference_source rs on vt.reference_source_id = rs.id 
			left join organisation o on rs.organisation_id = o.id 
		</createView>
	</changeSet>


	<!--                                 --> 
	<!-- RDF views -->

	<!-- FUCK - IMPORTANT -  all the external association terms are also in the internal tables
		select uid from vocabulary_term where uid ~ '.*nerc.*' ;
	-->
	<changeSet author="julian" id="000021">
		<createView viewName="_dcterms_issued">
			-- create view dcterms_issued as
			select
			classification_scheme_category_name as subject,
			'dcterms:issued'::varchar as predicate,
			date_added::varchar as object   -- do we really want to do this cast?
			from classification_scheme_category
		</createView>
	</changeSet>



</databaseChangeLog>




