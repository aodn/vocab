
<!-- doing it like this makes it amenable to using sparql instead -->

<!-- should change the encoding to charset=ISO-8859-1  -->
<!-- should hard code rather than pass literals as parameter -->

<!-- an element  dc publisher thats getting repeated twice probably because of the rp person outside join -->

<!-- perhaps swap the ordering to read more cleanly - same as sparql 
  eg. 

    'select object from _rdf where subject = $1 and predicate = $$dc:title$$ ',
  s p o
-->

<?xml version="1.0" encoding="windows-1252"?>
<rdf:RDF 
xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
xmlns:skos="http://www.w3.org/2004/02/skos/core#" 
xmlns:dc="http://purl.org/dc/elements/1.1/" 
xmlns:dcterms="http://purl.org/dc/terms/" 
xmlns:foaf="http://xmlns.com/foaf/0.1/">


-- I think we need further constraints ...
-- to restrict things to the parameter scheme .  how do we code this extra xml ? 
   
-- I think we just need to refine the outer query a little more ...
 

<% @conceptScheme = 'http://vocab.aodn.org.au/def/ClassScheme/parameter1' 
   %>

<skos:ConceptScheme rdf:about="<%= @conceptScheme %>">

	<% for @e in query_objects( 'dc:title',  @conceptScheme ) %>
    <dc:title><%= @e['object'] %></dc:title>
  <% end%>

	<% for @e in query_objects( 'dc:description',  @conceptScheme ) %>
    <dc:description><%= @e['object'] %></dc:description>
  <% end %>

	<% for @e in query_objects( 'dc:creator',  @conceptScheme ) %>
    <dc:creator>
      <foaf:Organisation>
        <foaf:name><%= @e['object'] %></foaf:name>
      <foaf:/Organisation>
    </dc:creator>
  <% end %>

  -- TODO element is repeated twice
  
	<% for @e in query_objects( 'dc:publisher',  @conceptScheme ) %>
    <dc:publisher>
      <foaf:Organisation>
        <foaf:name><%= @e['object'] %></foaf:name>
      <foaf:/Organisation>
    </dc:publisher>
  <% end %>

  <dc:rights>Freely Available For Reuse</dc:rights>

	<% for @e in query_objects( 'dcterms:issued',  @conceptScheme ) %>
  <dcterms:issued><%= @e['object'] %></dcterms:issued>
  <% end %>

</skos:ConceptScheme>






<% for @topConcept in query_subjects( 'rdf:type',  'skos:TopConcept') %>
<skos:TopConcept rdf:about="<%= @topConcept['subject'] %>">

    <% for @e in query_objects( 'skos:prefLabel',  @topConcept['subject'] ) %>
    <skos:prefLabel><%= @e['object'] %></skos:prefLabel>
    <% end %>

    <% for @e in query_objects( 'skos:definition',  @topConcept['subject'] ) %>
    <skos:definition><%= @e['object'] %></skos:definition>
    <% end %>

    <% for @e in query_objects( 'dcterms:issued',  @topConcept['subject'] ) %>
    <dcterms:issued><%= @e['object'] %></dcterms:issued>
    <% end %>

    <% for @e in query_objects( 'skos:inScheme',  @topConcept['subject'] ) %>
    <skos:inScheme><%= @e['object'] %></skos:inScheme>
    <% end %>

    <% for @e in query_objects( 'skos:narrower',  @topConcept['subject'] ) %>
    <skos:narrower><%= @e['object'] %></skos:narrower>
    <% end %>

</skos:TopConcept>
<% end %>

-- should be able to use query map function ...

- it would be very nice if we could do this without indexing 
- with the name. eg. e instead of @concept['subject]

<% for @concept in query_subjects( 'rdf:type',  'skos:Concept') %>
<skos:Concept rdf:about="<%= @concept['subject'] %>">

    <% for @e in query_objects( 'skos:inScheme',  @concept['subject']) %>
    <skos:inScheme><%= @e['object'] %></skos:inScheme>
    <% end %>

    <% for @e in query_objects( 'skos:broader',  @concept['subject']) %>
    <skos:broader><%= @e['object'] %></skos:broader>
    <% end %>

    <% for @e in query_objects( 'skos:prefLabel',  @concept['subject']) %>
    <skos:prefLabel><%= @e['object'] %></skos:prefLabel>
    <% end %>

    <% for @e in query_objects( 'skos:definition',  @concept['subject']) %>
    <skos:definition><%= @e['object'] %></skos:definition>
    <% end %>

    <% for @e in query_objects( 'dcterms:issued',  @concept['subject']) %>
    <skos:issued><%= @e['object'] %></skos:issued>
    <% end %>


    <% for @e in query_objects2( 'dcterms:issued',  @concept['subject']) %>
      <skos:issued><%= @e %></skos:issued>
    <% end %>



</skos:Concept>
<% end %>


